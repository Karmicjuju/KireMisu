version: '3.8'

services:
  # Nginx reverse proxy
  nginx:
    build:
      context: ./docker/nginx
      dockerfile: Dockerfile
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - manga-library:/manga:ro
      - thumbnails:/thumbnails:ro
    depends_on:
      - backend
      - frontend
    restart: unless-stopped

  # Backend API service
  backend:
    build:
      context: ./backend
      dockerfile: ./docker/backend/Dockerfile
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      - SECRET_KEY=${SECRET_KEY}
      - LOG_LEVEL=INFO
      - MANGA_LIBRARY_PATH=/manga
      - THUMBNAILS_PATH=/thumbnails
      - PROCESSED_DATA_PATH=/processed
    volumes:
      - manga-library:/manga
      - thumbnails:/thumbnails
      - processed-data:/processed
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

  # Frontend service
  frontend:
    build:
      context: ./frontend
      dockerfile: ./docker/frontend/Dockerfile
    environment:
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}
    restart: unless-stopped

  # PostgreSQL database
  postgres:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 30s
      timeout: 10s
      retries: 5

volumes:
  postgres-data:
  manga-library:
  thumbnails:
  processed-data: