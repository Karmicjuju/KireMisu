[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "kiremisu"
version = "0.1.0"
description = "Self-hosted manga reader and library management system"
authors = [
    {name = "KarmicJuju", email = ""},
]
# readme = "README.md"  # Optional for development builds
requires-python = ">=3.13"
dependencies = [
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "sqlalchemy>=2.0.0",
    "alembic>=1.12.0",
    "asyncpg>=0.29.0",
    "psycopg2-binary>=2.9.0",
    "httpx>=0.25.0",
    "pillow>=10.0.0",
    "pymupdf>=1.23.0",
    "rarfile>=4.1",
    "structlog>=23.2.0",
    "prometheus-client>=0.18.0",
    "python-multipart>=0.0.6",
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.4",
    "python-dotenv>=1.0.0",
    "pydantic>=2.5.0",
    "pydantic-settings>=2.1.0",
    "greenlet>=3.2.3",
]

[project.optional-dependencies]
dev = [
    "ruff>=0.1.0",
    "mypy>=1.7.0",
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "httpx>=0.25.0",  # For testing API clients
    "pre-commit>=3.5.0",
]

[tool.ruff]
line-length = 100
target-version = "py313"

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "UP",  # pyupgrade
    "C4",  # flake8-comprehensions
    "N",   # pep8-naming
]
ignore = [
    "E501",  # line too long, handled by line-length setting
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

[tool.ruff.lint.isort]
known-first-party = ["kiremisu"]
split-on-trailing-comma = true

[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "rarfile.*",
    "fitz.*",
    "PIL.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=kiremisu",
    "--cov-report=term-missing",
    "--cov-report=html",
]
asyncio_mode = "auto"
markers = [
    "unit: Unit tests for individual functions/classes",
    "integration: Integration tests for component interactions",
    "api: API endpoint tests with database",
    "security: Security-focused tests (path traversal, validation)",
    "performance: Performance and load tests",
    "slow: Long-running tests"
]

[tool.coverage.run]
source = ["kiremisu"]
context = "${COVERAGE_CONTEXT}"
omit = [
    "*/tests/*",
    "*/migrations/*",
    "*/__init__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.coverage.html]
directory = "htmlcov/${COVERAGE_CONTEXT:-combined}"

[dependency-groups]
dev = [
    "aiosqlite>=0.21.0",
]
